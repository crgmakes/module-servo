# Aquarius - Automation Simplified
#
# @brief Git script for exporting PCB data for Servo Module
# @note runs manually or automatically when there is a release
# @date 6/11/25
# @author cyberreefguru
# (c) CRG Makes 2025
name: Aquarius-Servo-Module-Release
on:
  release:
    types: [published]
  workflow_dispatch:
    
jobs:
  export-ecad:
    name: Export ECAD
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad9_auto_full:latest
      
    steps:
    - name: Update system
      run: |
        echo "Working Directory $(pwd)"
        apt update
        apt -y install git zip

    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        path: working/module-servo

    - name: Checkout Extras
      uses: actions/checkout@v4
      with:
        repository: crgmakes/kicad-extras
        path: working/kicad-extras

    - name: Checkout CRGM Library
      uses: actions/checkout@v4
      with:
        repository: crgmakes/kicad-library
        path: working/kicad-library

    - name: Checkout PcbDraw Library
      uses: actions/checkout@v4
      with:
        repository: yaqwsx/PcbDraw-Lib
        path: working/PcbDraw-Lib

    - name: Checkout Fab Kit Library
      uses: actions/checkout@v4
      with:
        repository: bennymeg/Fabrication-Toolkit
        path: working/Fabrication-Toolkit

    - name: Update fonts
      run: |
        mkdir -p /usr/share/fonts/
        cp working/kicad-extras/fonts/* /usr/share/fonts/
        fc-cache -f -v

    # Update PCB with hash of current check in
    - name: Update the PCB with git hash
      run: |
        cd working/module-servo
        export COMMIT=$(git rev-parse --short HEAD)
        export RELEASE_DATE=$(date "+%m/%d/%Y @ %H:%M")
        echo "COMMIT = ${COMMIT}"    
        echo "ref: '${{ github.ref }}'"
        echo "tag: '${{ github.event.release.tag_name }}'"
        echo "default: '${{ env.default }}'"
        cd pcb
        sed -i "s!<<hash>>!${COMMIT}!" *.kicad_pcb
        sed -i "s!<<hash>>!${COMMIT}!" *.kicad_sch
        sed -i "s!<<release-date>>!${RELEASE_DATE}!" *.kicad_pcb
        sed -i "s!<<release-date>>!${RELEASE_DATE}!" *.kicad_sch

    # Remove tag from PCB since this is not a release
    - name: Update the PCB build with git hash
      if: github.event_name != 'release'
      run: |
        cd working/module-servo/pcb
        sed -i "s!<<tag>>!MANUAL!" *.kicad_pcb
        sed -i "s!<<tag>>!MANUAL!" *.kicad_sch

    # Update PCB with release tag
    - name: Update the PCB release with git hash and version tag
      if: github.event_name == 'release'
      run: |
        cd working/module-servo/pcb
        echo "tag: ${{ github.ref_name }}"
        echo "release tag: ${{ github.event.release.tag_name }}"
        sed -i "s!<<tag>>!${{ github.event.release.tag_name }}!" *.kicad_pcb
        sed -i "s!<<tag>>!${{ github.event.release.tag_name }}!" *.kicad_sch

    # generates fab files for the single PCB, includes gerber, drill, ibom, schematic, and images
    # NOTE: only run if this is not a release (e.g., run manually)
    - name: Generate Single PCB Fabrication Files
      if: github.event_name != 'release'
      run: |
        echo "Working Directory: ${GITHUB_WORKSPACE}"
        cd working/module-servo/
        kibot -c ../kicad-extras/kibot/crgm.kibot.yaml -e pcb/servo-module.kicad_sch -b pcb/servo-module.kicad_pcb -d production create_pcb_archive_4layer
        # production now contains servo-module.zip
        mv production/servo-module.zip ../..
        # servo-module.zip now in home directory

    # generates fab files for the single PCB, includes gerber, drill, ibom, schematic, images, 3d model, and renders
    # NOTE: only run if this is a release
    - name: Generate Release Fabrication Files
      if: github.event_name == 'release'
      run: |
        echo "Working Directory: ${GITHUB_WORKSPACE}"
        cd working/module-servo/
        kibot -c ../kicad-extras/kibot/crgm.kibot.yaml -e pcb/servo-module.kicad_sch -b pcb/servo-module.kicad_pcb -d production create_release_archive_4layer
        # production now contains servo-module-release.zip
        mv production/servo-module-release.zip ../../servo-module-release-${{ github.event.release.tag_name }}.zip
        # servo-module-release-<<tag>>.zip now in home directory

    # only generate panel during a release
    # generates fab files for the panel PCB, includes gerber, drill, images - does NOT include ibom, 3d model, schematic, or renders
    - name: Generate PCB Panel for Release
      if: github.event_name == 'release'
      run: |
        cd working/module-servo/pcb/panel
        rm -rf production
        # create the panelized PCB
        kibot -c ../../../kicad-extras/kibot/crgm.kibot.yaml -e ../servo-module.kicad_sch -b ../servo-module.kicad_pcb -d pcb create_panel
        # working/module-servo/pcb/panel/pcb now contains servo-module-panel.kicad_pcb
        # create fab files for panel; does not include renders and 3d model
        kibot -c ../../../kicad-extras/kibot/crgm.kibot.yaml -e ../servo-module.kicad_sch -b pcb/servo-module-panel.kicad_pcb -d production create_panel_archive_4layer
        # production now contains servo-module-panel.zip
        mv production/servo-module-panel.zip .
        # add panelized PCB to archive
        zip -u servo-module-panel.zip pcb/**
        mv servo-module-panel.zip ../../../../servo-module-panel-release-${{ github.event.release.tag_name }}.zip
        # ls -AlF ${GITHUB_WORKSPACE}
        # ls -AlF ${GITHUB_WORKSPACE}/working
        # home now contains servo-module-panel-release-${{ github.event.release.tag_name }}.zip

    # only runs if NOT a release
    # Upload fab artifacts to workflow
    - name: Upload PCB Artifacts
      if: github.event_name != 'release'
      uses: actions/upload-artifact@v4
      with:
        name: aquarius-servo-module
        path: |
          servo-module.zip
        if-no-files-found: warn
        retention-days: 30

    # Upload release fab artifacts to workflow
    # NOTE: only runs during a release
    - name: Upload Release Artifacts
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: aquarius-servo-module-${{ github.event.release.tag_name }}
        path: |
          servo-module-release-${{ github.event.release.tag_name }}.zip
          servo-module-panel-release-${{ github.event.release.tag_name }}.zip
        if-no-files-found: warn
        retention-days: 30

    # Upload release fab artifacts to release
    # NOTE: only runs during a release
    - name: Upload files to release area
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'release'
      with:
        name: aquarius-servo-module-${{ github.event.release.tag_name }}
        files: |
          servo-module-release-${{ github.event.release.tag_name }}.zip
          servo-module-panel-release-${{ github.event.release.tag_name }}.zip
